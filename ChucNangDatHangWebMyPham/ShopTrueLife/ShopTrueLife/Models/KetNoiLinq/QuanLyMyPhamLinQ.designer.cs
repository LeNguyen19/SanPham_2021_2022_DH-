#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShopTrueLife.Models.KetNoiLinq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyMyPham")]
	public partial class QuanLyMyPhamLinQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBangTamSanPham(BangTamSanPham instance);
    partial void UpdateBangTamSanPham(BangTamSanPham instance);
    partial void DeleteBangTamSanPham(BangTamSanPham instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertBangTamTaiKhoan(BangTamTaiKhoan instance);
    partial void UpdateBangTamTaiKhoan(BangTamTaiKhoan instance);
    partial void DeleteBangTamTaiKhoan(BangTamTaiKhoan instance);
    partial void InsertBinhLuan(BinhLuan instance);
    partial void UpdateBinhLuan(BinhLuan instance);
    partial void DeleteBinhLuan(BinhLuan instance);
    partial void InsertChiTietBinhLuan(ChiTietBinhLuan instance);
    partial void UpdateChiTietBinhLuan(ChiTietBinhLuan instance);
    partial void DeleteChiTietBinhLuan(ChiTietBinhLuan instance);
    partial void InsertChiTietHoaDonBanHang(ChiTietHoaDonBanHang instance);
    partial void UpdateChiTietHoaDonBanHang(ChiTietHoaDonBanHang instance);
    partial void DeleteChiTietHoaDonBanHang(ChiTietHoaDonBanHang instance);
    partial void InsertChiTietHoaDonNhapHang(ChiTietHoaDonNhapHang instance);
    partial void UpdateChiTietHoaDonNhapHang(ChiTietHoaDonNhapHang instance);
    partial void DeleteChiTietHoaDonNhapHang(ChiTietHoaDonNhapHang instance);
    partial void InsertDienThoai_KhachHang(DienThoai_KhachHang instance);
    partial void UpdateDienThoai_KhachHang(DienThoai_KhachHang instance);
    partial void DeleteDienThoai_KhachHang(DienThoai_KhachHang instance);
    partial void InsertDienThoai_NhaCungCap(DienThoai_NhaCungCap instance);
    partial void UpdateDienThoai_NhaCungCap(DienThoai_NhaCungCap instance);
    partial void DeleteDienThoai_NhaCungCap(DienThoai_NhaCungCap instance);
    partial void InsertDienThoai_NhanVien(DienThoai_NhanVien instance);
    partial void UpdateDienThoai_NhanVien(DienThoai_NhanVien instance);
    partial void DeleteDienThoai_NhanVien(DienThoai_NhanVien instance);
    partial void InsertGiamGiaSanPham(GiamGiaSanPham instance);
    partial void UpdateGiamGiaSanPham(GiamGiaSanPham instance);
    partial void DeleteGiamGiaSanPham(GiamGiaSanPham instance);
    partial void InsertGiamGiaThanhVien(GiamGiaThanhVien instance);
    partial void UpdateGiamGiaThanhVien(GiamGiaThanhVien instance);
    partial void DeleteGiamGiaThanhVien(GiamGiaThanhVien instance);
    partial void InsertGiamGiaTheoNgay(GiamGiaTheoNgay instance);
    partial void UpdateGiamGiaTheoNgay(GiamGiaTheoNgay instance);
    partial void DeleteGiamGiaTheoNgay(GiamGiaTheoNgay instance);
    partial void InsertHinhAnh(HinhAnh instance);
    partial void UpdateHinhAnh(HinhAnh instance);
    partial void DeleteHinhAnh(HinhAnh instance);
    partial void InsertHoaDonBanHang(HoaDonBanHang instance);
    partial void UpdateHoaDonBanHang(HoaDonBanHang instance);
    partial void DeleteHoaDonBanHang(HoaDonBanHang instance);
    partial void InsertHoaDonNhapHang(HoaDonNhapHang instance);
    partial void UpdateHoaDonNhapHang(HoaDonNhapHang instance);
    partial void DeleteHoaDonNhapHang(HoaDonNhapHang instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiNhanVien(LoaiNhanVien instance);
    partial void UpdateLoaiNhanVien(LoaiNhanVien instance);
    partial void DeleteLoaiNhanVien(LoaiNhanVien instance);
    partial void InsertLoaiSanPham(LoaiSanPham instance);
    partial void UpdateLoaiSanPham(LoaiSanPham instance);
    partial void DeleteLoaiSanPham(LoaiSanPham instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    #endregion
		
		public QuanLyMyPhamLinQDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QuanLyMyPhamConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyMyPhamLinQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyMyPhamLinQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyMyPhamLinQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyMyPhamLinQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BangTamSanPham> BangTamSanPhams
		{
			get
			{
				return this.GetTable<BangTamSanPham>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<BangTamTaiKhoan> BangTamTaiKhoans
		{
			get
			{
				return this.GetTable<BangTamTaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<BinhLuan> BinhLuans
		{
			get
			{
				return this.GetTable<BinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietBinhLuan> ChiTietBinhLuans
		{
			get
			{
				return this.GetTable<ChiTietBinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDonBanHang> ChiTietHoaDonBanHangs
		{
			get
			{
				return this.GetTable<ChiTietHoaDonBanHang>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDonNhapHang> ChiTietHoaDonNhapHangs
		{
			get
			{
				return this.GetTable<ChiTietHoaDonNhapHang>();
			}
		}
		
		public System.Data.Linq.Table<DienThoai_KhachHang> DienThoai_KhachHangs
		{
			get
			{
				return this.GetTable<DienThoai_KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<DienThoai_NhaCungCap> DienThoai_NhaCungCaps
		{
			get
			{
				return this.GetTable<DienThoai_NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<DienThoai_NhanVien> DienThoai_NhanViens
		{
			get
			{
				return this.GetTable<DienThoai_NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<GiamGiaSanPham> GiamGiaSanPhams
		{
			get
			{
				return this.GetTable<GiamGiaSanPham>();
			}
		}
		
		public System.Data.Linq.Table<GiamGiaThanhVien> GiamGiaThanhViens
		{
			get
			{
				return this.GetTable<GiamGiaThanhVien>();
			}
		}
		
		public System.Data.Linq.Table<GiamGiaTheoNgay> GiamGiaTheoNgays
		{
			get
			{
				return this.GetTable<GiamGiaTheoNgay>();
			}
		}
		
		public System.Data.Linq.Table<HinhAnh> HinhAnhs
		{
			get
			{
				return this.GetTable<HinhAnh>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonBanHang> HoaDonBanHangs
		{
			get
			{
				return this.GetTable<HoaDonBanHang>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonNhapHang> HoaDonNhapHangs
		{
			get
			{
				return this.GetTable<HoaDonNhapHang>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiNhanVien> LoaiNhanViens
		{
			get
			{
				return this.GetTable<LoaiNhanVien>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSanPham> LoaiSanPhams
		{
			get
			{
				return this.GetTable<LoaiSanPham>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangTamSanPham")]
	public partial class BangTamSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SanPham;
		
		private string _TenSanPham;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _GiaBan;
		
		private System.Nullable<int> _ID_LoaiSanPham;
		
		private string _MoTaSanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SanPhamChanging(int value);
    partial void OnID_SanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGiaBanChanging(System.Nullable<int> value);
    partial void OnGiaBanChanged();
    partial void OnID_LoaiSanPhamChanging(System.Nullable<int> value);
    partial void OnID_LoaiSanPhamChanged();
    partial void OnMoTaSanPhamChanging(string value);
    partial void OnMoTaSanPhamChanged();
    #endregion
		
		public BangTamSanPham()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(200)")]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Int")]
		public System.Nullable<int> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LoaiSanPham", DbType="Int")]
		public System.Nullable<int> ID_LoaiSanPham
		{
			get
			{
				return this._ID_LoaiSanPham;
			}
			set
			{
				if ((this._ID_LoaiSanPham != value))
				{
					this.OnID_LoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_LoaiSanPham = value;
					this.SendPropertyChanged("ID_LoaiSanPham");
					this.OnID_LoaiSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaSanPham", DbType="NVarChar(1000)")]
		public string MoTaSanPham
		{
			get
			{
				return this._MoTaSanPham;
			}
			set
			{
				if ((this._MoTaSanPham != value))
				{
					this.OnMoTaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MoTaSanPham = value;
					this.SendPropertyChanged("MoTaSanPham");
					this.OnMoTaSanPhamChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SanPham;
		
		private string _TenSanPham;
		
		private int _SoLuong;
		
		private int _GiaBan;
		
		private string _MoTaSanPham;
		
		private int _ID_LoaiSanPham;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntitySet<ChiTietHoaDonBanHang> _ChiTietHoaDonBanHangs;
		
		private EntitySet<ChiTietHoaDonNhapHang> _ChiTietHoaDonNhapHangs;
		
		private EntityRef<GiamGiaSanPham> _GiamGiaSanPham;
		
		private EntitySet<HinhAnh> _HinhAnhs;
		
		private EntityRef<LoaiSanPham> _LoaiSanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SanPhamChanging(int value);
    partial void OnID_SanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnGiaBanChanging(int value);
    partial void OnGiaBanChanged();
    partial void OnMoTaSanPhamChanging(string value);
    partial void OnMoTaSanPhamChanged();
    partial void OnID_LoaiSanPhamChanging(int value);
    partial void OnID_LoaiSanPhamChanged();
    #endregion
		
		public SanPham()
		{
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._ChiTietHoaDonBanHangs = new EntitySet<ChiTietHoaDonBanHang>(new Action<ChiTietHoaDonBanHang>(this.attach_ChiTietHoaDonBanHangs), new Action<ChiTietHoaDonBanHang>(this.detach_ChiTietHoaDonBanHangs));
			this._ChiTietHoaDonNhapHangs = new EntitySet<ChiTietHoaDonNhapHang>(new Action<ChiTietHoaDonNhapHang>(this.attach_ChiTietHoaDonNhapHangs), new Action<ChiTietHoaDonNhapHang>(this.detach_ChiTietHoaDonNhapHangs));
			this._GiamGiaSanPham = default(EntityRef<GiamGiaSanPham>);
			this._HinhAnhs = new EntitySet<HinhAnh>(new Action<HinhAnh>(this.attach_HinhAnhs), new Action<HinhAnh>(this.detach_HinhAnhs));
			this._LoaiSanPham = default(EntityRef<LoaiSanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Int NOT NULL")]
		public int GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaSanPham", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string MoTaSanPham
		{
			get
			{
				return this._MoTaSanPham;
			}
			set
			{
				if ((this._MoTaSanPham != value))
				{
					this.OnMoTaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MoTaSanPham = value;
					this.SendPropertyChanged("MoTaSanPham");
					this.OnMoTaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LoaiSanPham", DbType="Int NOT NULL")]
		public int ID_LoaiSanPham
		{
			get
			{
				return this._ID_LoaiSanPham;
			}
			set
			{
				if ((this._ID_LoaiSanPham != value))
				{
					if (this._LoaiSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_LoaiSanPham = value;
					this.SendPropertyChanged("ID_LoaiSanPham");
					this.OnID_LoaiSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BinhLuan", Storage="_BinhLuans", ThisKey="ID_SanPham", OtherKey="ID_SanPham")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDonBanHang", Storage="_ChiTietHoaDonBanHangs", ThisKey="ID_SanPham", OtherKey="ID_SanPham")]
		public EntitySet<ChiTietHoaDonBanHang> ChiTietHoaDonBanHangs
		{
			get
			{
				return this._ChiTietHoaDonBanHangs;
			}
			set
			{
				this._ChiTietHoaDonBanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDonNhapHang", Storage="_ChiTietHoaDonNhapHangs", ThisKey="ID_SanPham", OtherKey="ID_SanPham")]
		public EntitySet<ChiTietHoaDonNhapHang> ChiTietHoaDonNhapHangs
		{
			get
			{
				return this._ChiTietHoaDonNhapHangs;
			}
			set
			{
				this._ChiTietHoaDonNhapHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_GiamGiaSanPham", Storage="_GiamGiaSanPham", ThisKey="ID_SanPham", OtherKey="ID_SanPham", IsUnique=true, IsForeignKey=false)]
		public GiamGiaSanPham GiamGiaSanPham
		{
			get
			{
				return this._GiamGiaSanPham.Entity;
			}
			set
			{
				GiamGiaSanPham previousValue = this._GiamGiaSanPham.Entity;
				if (((previousValue != value) 
							|| (this._GiamGiaSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiamGiaSanPham.Entity = null;
						previousValue.SanPham = null;
					}
					this._GiamGiaSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPham = this;
					}
					this.SendPropertyChanged("GiamGiaSanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_HinhAnh", Storage="_HinhAnhs", ThisKey="ID_SanPham", OtherKey="ID_SanPham")]
		public EntitySet<HinhAnh> HinhAnhs
		{
			get
			{
				return this._HinhAnhs;
			}
			set
			{
				this._HinhAnhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_LoaiSanPham", ThisKey="ID_LoaiSanPham", OtherKey="ID_LoaiSanPham", IsForeignKey=true)]
		public LoaiSanPham LoaiSanPham
		{
			get
			{
				return this._LoaiSanPham.Entity;
			}
			set
			{
				LoaiSanPham previousValue = this._LoaiSanPham.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._ID_LoaiSanPham = value.ID_LoaiSanPham;
					}
					else
					{
						this._ID_LoaiSanPham = default(int);
					}
					this.SendPropertyChanged("LoaiSanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietHoaDonBanHangs(ChiTietHoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietHoaDonBanHangs(ChiTietHoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietHoaDonNhapHangs(ChiTietHoaDonNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietHoaDonNhapHangs(ChiTietHoaDonNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_HinhAnhs(HinhAnh entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_HinhAnhs(HinhAnh entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangTamTaiKhoan")]
	public partial class BangTamTaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public BangTamTaiKhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(30)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BinhLuan")]
	public partial class BinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_BinhLuan;
		
		private int _ID_SanPham;
		
		private EntitySet<ChiTietBinhLuan> _ChiTietBinhLuans;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BinhLuanChanging(int value);
    partial void OnID_BinhLuanChanged();
    partial void OnID_SanPhamChanging(int value);
    partial void OnID_SanPhamChanged();
    #endregion
		
		public BinhLuan()
		{
			this._ChiTietBinhLuans = new EntitySet<ChiTietBinhLuan>(new Action<ChiTietBinhLuan>(this.attach_ChiTietBinhLuans), new Action<ChiTietBinhLuan>(this.detach_ChiTietBinhLuans));
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BinhLuan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_BinhLuan
		{
			get
			{
				return this._ID_BinhLuan;
			}
			set
			{
				if ((this._ID_BinhLuan != value))
				{
					this.OnID_BinhLuanChanging(value);
					this.SendPropertyChanging();
					this._ID_BinhLuan = value;
					this.SendPropertyChanged("ID_BinhLuan");
					this.OnID_BinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", DbType="Int NOT NULL")]
		public int ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BinhLuan_ChiTietBinhLuan", Storage="_ChiTietBinhLuans", ThisKey="ID_BinhLuan", OtherKey="ID_BinhLuan")]
		public EntitySet<ChiTietBinhLuan> ChiTietBinhLuans
		{
			get
			{
				return this._ChiTietBinhLuans;
			}
			set
			{
				this._ChiTietBinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BinhLuan", Storage="_SanPham", ThisKey="ID_SanPham", OtherKey="ID_SanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._ID_SanPham = value.ID_SanPham;
					}
					else
					{
						this._ID_SanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietBinhLuans(ChiTietBinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.BinhLuan = this;
		}
		
		private void detach_ChiTietBinhLuans(ChiTietBinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.BinhLuan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietBinhLuan")]
	public partial class ChiTietBinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _NgayBinhLuan;
		
		private string _NoiDung;
		
		private int _ID_BinhLuan;
		
		private int _ID_KhachHang;
		
		private EntityRef<BinhLuan> _BinhLuan;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNgayBinhLuanChanging(System.DateTime value);
    partial void OnNgayBinhLuanChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnID_BinhLuanChanging(int value);
    partial void OnID_BinhLuanChanged();
    partial void OnID_KhachHangChanging(int value);
    partial void OnID_KhachHangChanged();
    #endregion
		
		public ChiTietBinhLuan()
		{
			this._BinhLuan = default(EntityRef<BinhLuan>);
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBinhLuan", DbType="DateTime NOT NULL")]
		public System.DateTime NgayBinhLuan
		{
			get
			{
				return this._NgayBinhLuan;
			}
			set
			{
				if ((this._NgayBinhLuan != value))
				{
					this.OnNgayBinhLuanChanging(value);
					this.SendPropertyChanging();
					this._NgayBinhLuan = value;
					this.SendPropertyChanged("NgayBinhLuan");
					this.OnNgayBinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BinhLuan", DbType="Int NOT NULL")]
		public int ID_BinhLuan
		{
			get
			{
				return this._ID_BinhLuan;
			}
			set
			{
				if ((this._ID_BinhLuan != value))
				{
					if (this._BinhLuan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BinhLuanChanging(value);
					this.SendPropertyChanging();
					this._ID_BinhLuan = value;
					this.SendPropertyChanged("ID_BinhLuan");
					this.OnID_BinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KhachHang", DbType="Int NOT NULL")]
		public int ID_KhachHang
		{
			get
			{
				return this._ID_KhachHang;
			}
			set
			{
				if ((this._ID_KhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KhachHangChanging(value);
					this.SendPropertyChanging();
					this._ID_KhachHang = value;
					this.SendPropertyChanged("ID_KhachHang");
					this.OnID_KhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BinhLuan_ChiTietBinhLuan", Storage="_BinhLuan", ThisKey="ID_BinhLuan", OtherKey="ID_BinhLuan", IsForeignKey=true)]
		public BinhLuan BinhLuan
		{
			get
			{
				return this._BinhLuan.Entity;
			}
			set
			{
				BinhLuan previousValue = this._BinhLuan.Entity;
				if (((previousValue != value) 
							|| (this._BinhLuan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BinhLuan.Entity = null;
						previousValue.ChiTietBinhLuans.Remove(this);
					}
					this._BinhLuan.Entity = value;
					if ((value != null))
					{
						value.ChiTietBinhLuans.Add(this);
						this._ID_BinhLuan = value.ID_BinhLuan;
					}
					else
					{
						this._ID_BinhLuan = default(int);
					}
					this.SendPropertyChanged("BinhLuan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ChiTietBinhLuan", Storage="_KhachHang", ThisKey="ID_KhachHang", OtherKey="ID_KhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.ChiTietBinhLuans.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietBinhLuans.Add(this);
						this._ID_KhachHang = value.ID_KhachHang;
					}
					else
					{
						this._ID_KhachHang = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDonBanHang")]
	public partial class ChiTietHoaDonBanHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_HoaDonBanHang;
		
		private int _ID_SanPham;
		
		private int _SoLuong;
		
		private int _Gia;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<HoaDonBanHang> _HoaDonBanHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HoaDonBanHangChanging(int value);
    partial void OnID_HoaDonBanHangChanged();
    partial void OnID_SanPhamChanging(int value);
    partial void OnID_SanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnGiaChanging(int value);
    partial void OnGiaChanged();
    #endregion
		
		public ChiTietHoaDonBanHang()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._HoaDonBanHang = default(EntityRef<HoaDonBanHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HoaDonBanHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_HoaDonBanHang
		{
			get
			{
				return this._ID_HoaDonBanHang;
			}
			set
			{
				if ((this._ID_HoaDonBanHang != value))
				{
					if (this._HoaDonBanHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HoaDonBanHangChanging(value);
					this.SendPropertyChanging();
					this._ID_HoaDonBanHang = value;
					this.SendPropertyChanged("ID_HoaDonBanHang");
					this.OnID_HoaDonBanHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int NOT NULL")]
		public int Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDonBanHang", Storage="_SanPham", ThisKey="ID_SanPham", OtherKey="ID_SanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietHoaDonBanHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonBanHangs.Add(this);
						this._ID_SanPham = value.ID_SanPham;
					}
					else
					{
						this._ID_SanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBanHang_ChiTietHoaDonBanHang", Storage="_HoaDonBanHang", ThisKey="ID_HoaDonBanHang", OtherKey="ID_HoaDonBanHang", IsForeignKey=true)]
		public HoaDonBanHang HoaDonBanHang
		{
			get
			{
				return this._HoaDonBanHang.Entity;
			}
			set
			{
				HoaDonBanHang previousValue = this._HoaDonBanHang.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonBanHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonBanHang.Entity = null;
						previousValue.ChiTietHoaDonBanHangs.Remove(this);
					}
					this._HoaDonBanHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonBanHangs.Add(this);
						this._ID_HoaDonBanHang = value.ID_HoaDonBanHang;
					}
					else
					{
						this._ID_HoaDonBanHang = default(int);
					}
					this.SendPropertyChanged("HoaDonBanHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDonNhapHang")]
	public partial class ChiTietHoaDonNhapHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_HoaDonNhapHang;
		
		private int _ID_SanPham;
		
		private int _SoLuong;
		
		private int _Gia;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<HoaDonNhapHang> _HoaDonNhapHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HoaDonNhapHangChanging(int value);
    partial void OnID_HoaDonNhapHangChanged();
    partial void OnID_SanPhamChanging(int value);
    partial void OnID_SanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnGiaChanging(int value);
    partial void OnGiaChanged();
    #endregion
		
		public ChiTietHoaDonNhapHang()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._HoaDonNhapHang = default(EntityRef<HoaDonNhapHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HoaDonNhapHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_HoaDonNhapHang
		{
			get
			{
				return this._ID_HoaDonNhapHang;
			}
			set
			{
				if ((this._ID_HoaDonNhapHang != value))
				{
					if (this._HoaDonNhapHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HoaDonNhapHangChanging(value);
					this.SendPropertyChanging();
					this._ID_HoaDonNhapHang = value;
					this.SendPropertyChanged("ID_HoaDonNhapHang");
					this.OnID_HoaDonNhapHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int NOT NULL")]
		public int Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDonNhapHang", Storage="_SanPham", ThisKey="ID_SanPham", OtherKey="ID_SanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietHoaDonNhapHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonNhapHangs.Add(this);
						this._ID_SanPham = value.ID_SanPham;
					}
					else
					{
						this._ID_SanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhapHang_ChiTietHoaDonNhapHang", Storage="_HoaDonNhapHang", ThisKey="ID_HoaDonNhapHang", OtherKey="ID_HoaDonNhapHang", IsForeignKey=true)]
		public HoaDonNhapHang HoaDonNhapHang
		{
			get
			{
				return this._HoaDonNhapHang.Entity;
			}
			set
			{
				HoaDonNhapHang previousValue = this._HoaDonNhapHang.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonNhapHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonNhapHang.Entity = null;
						previousValue.ChiTietHoaDonNhapHangs.Remove(this);
					}
					this._HoaDonNhapHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonNhapHangs.Add(this);
						this._ID_HoaDonNhapHang = value.ID_HoaDonNhapHang;
					}
					else
					{
						this._ID_HoaDonNhapHang = default(int);
					}
					this.SendPropertyChanged("HoaDonNhapHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DienThoai_KhachHang")]
	public partial class DienThoai_KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoDienThoai;
		
		private int _ID_KhachHang;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnID_KhachHangChanging(int value);
    partial void OnID_KhachHangChanged();
    #endregion
		
		public DienThoai_KhachHang()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KhachHang", DbType="Int NOT NULL")]
		public int ID_KhachHang
		{
			get
			{
				return this._ID_KhachHang;
			}
			set
			{
				if ((this._ID_KhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KhachHangChanging(value);
					this.SendPropertyChanging();
					this._ID_KhachHang = value;
					this.SendPropertyChanged("ID_KhachHang");
					this.OnID_KhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DienThoai_KhachHang", Storage="_KhachHang", ThisKey="ID_KhachHang", OtherKey="ID_KhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DienThoai_KhachHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DienThoai_KhachHangs.Add(this);
						this._ID_KhachHang = value.ID_KhachHang;
					}
					else
					{
						this._ID_KhachHang = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DienThoai_NhaCungCap")]
	public partial class DienThoai_NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoDienThoai;
		
		private int _ID_NhaCungCap;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnID_NhaCungCapChanging(int value);
    partial void OnID_NhaCungCapChanged();
    #endregion
		
		public DienThoai_NhaCungCap()
		{
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NhaCungCap", DbType="Int NOT NULL")]
		public int ID_NhaCungCap
		{
			get
			{
				return this._ID_NhaCungCap;
			}
			set
			{
				if ((this._ID_NhaCungCap != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._ID_NhaCungCap = value;
					this.SendPropertyChanged("ID_NhaCungCap");
					this.OnID_NhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_DienThoai_NhaCungCap", Storage="_NhaCungCap", ThisKey="ID_NhaCungCap", OtherKey="ID_NhaCungCap", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.DienThoai_NhaCungCaps.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.DienThoai_NhaCungCaps.Add(this);
						this._ID_NhaCungCap = value.ID_NhaCungCap;
					}
					else
					{
						this._ID_NhaCungCap = default(int);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DienThoai_NhanVien")]
	public partial class DienThoai_NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoDienThoai;
		
		private System.Nullable<int> _ID_NhanVien;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnID_NhanVienChanging(System.Nullable<int> value);
    partial void OnID_NhanVienChanged();
    #endregion
		
		public DienThoai_NhanVien()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NhanVien", DbType="Int")]
		public System.Nullable<int> ID_NhanVien
		{
			get
			{
				return this._ID_NhanVien;
			}
			set
			{
				if ((this._ID_NhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NhanVienChanging(value);
					this.SendPropertyChanging();
					this._ID_NhanVien = value;
					this.SendPropertyChanged("ID_NhanVien");
					this.OnID_NhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DienThoai_NhanVien", Storage="_NhanVien", ThisKey="ID_NhanVien", OtherKey="ID_NhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.DienThoai_NhanViens.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.DienThoai_NhanViens.Add(this);
						this._ID_NhanVien = value.ID_NhanVien;
					}
					else
					{
						this._ID_NhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiamGiaSanPham")]
	public partial class GiamGiaSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SanPham;
		
		private int _SoPhanTram;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SanPhamChanging(int value);
    partial void OnID_SanPhamChanged();
    partial void OnSoPhanTramChanging(int value);
    partial void OnSoPhanTramChanged();
    #endregion
		
		public GiamGiaSanPham()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhanTram", DbType="Int NOT NULL")]
		public int SoPhanTram
		{
			get
			{
				return this._SoPhanTram;
			}
			set
			{
				if ((this._SoPhanTram != value))
				{
					this.OnSoPhanTramChanging(value);
					this.SendPropertyChanging();
					this._SoPhanTram = value;
					this.SendPropertyChanged("SoPhanTram");
					this.OnSoPhanTramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_GiamGiaSanPham", Storage="_SanPham", ThisKey="ID_SanPham", OtherKey="ID_SanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.GiamGiaSanPham = null;
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.GiamGiaSanPham = this;
						this._ID_SanPham = value.ID_SanPham;
					}
					else
					{
						this._ID_SanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiamGiaThanhVien")]
	public partial class GiamGiaThanhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_GiamGia;
		
		private int _SoTienBatDau;
		
		private int _SoTienKetThuc;
		
		private int _SoPhanTram;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GiamGiaChanging(int value);
    partial void OnID_GiamGiaChanged();
    partial void OnSoTienBatDauChanging(int value);
    partial void OnSoTienBatDauChanged();
    partial void OnSoTienKetThucChanging(int value);
    partial void OnSoTienKetThucChanged();
    partial void OnSoPhanTramChanging(int value);
    partial void OnSoPhanTramChanged();
    #endregion
		
		public GiamGiaThanhVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GiamGia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_GiamGia
		{
			get
			{
				return this._ID_GiamGia;
			}
			set
			{
				if ((this._ID_GiamGia != value))
				{
					this.OnID_GiamGiaChanging(value);
					this.SendPropertyChanging();
					this._ID_GiamGia = value;
					this.SendPropertyChanged("ID_GiamGia");
					this.OnID_GiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTienBatDau", DbType="Int NOT NULL")]
		public int SoTienBatDau
		{
			get
			{
				return this._SoTienBatDau;
			}
			set
			{
				if ((this._SoTienBatDau != value))
				{
					this.OnSoTienBatDauChanging(value);
					this.SendPropertyChanging();
					this._SoTienBatDau = value;
					this.SendPropertyChanged("SoTienBatDau");
					this.OnSoTienBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTienKetThuc", DbType="Int NOT NULL")]
		public int SoTienKetThuc
		{
			get
			{
				return this._SoTienKetThuc;
			}
			set
			{
				if ((this._SoTienKetThuc != value))
				{
					this.OnSoTienKetThucChanging(value);
					this.SendPropertyChanging();
					this._SoTienKetThuc = value;
					this.SendPropertyChanged("SoTienKetThuc");
					this.OnSoTienKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhanTram", DbType="Int NOT NULL")]
		public int SoPhanTram
		{
			get
			{
				return this._SoPhanTram;
			}
			set
			{
				if ((this._SoPhanTram != value))
				{
					this.OnSoPhanTramChanging(value);
					this.SendPropertyChanging();
					this._SoPhanTram = value;
					this.SendPropertyChanged("SoPhanTram");
					this.OnSoPhanTramChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiamGiaTheoNgay")]
	public partial class GiamGiaTheoNgay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_GiamGia;
		
		private System.DateTime _NgayBatDau;
		
		private System.DateTime _NgayKetThuc;
		
		private int _SoPhanTram;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GiamGiaChanging(int value);
    partial void OnID_GiamGiaChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.DateTime value);
    partial void OnNgayKetThucChanged();
    partial void OnSoPhanTramChanging(int value);
    partial void OnSoPhanTramChanged();
    #endregion
		
		public GiamGiaTheoNgay()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GiamGia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_GiamGia
		{
			get
			{
				return this._ID_GiamGia;
			}
			set
			{
				if ((this._ID_GiamGia != value))
				{
					this.OnID_GiamGiaChanging(value);
					this.SendPropertyChanging();
					this._ID_GiamGia = value;
					this.SendPropertyChanged("ID_GiamGia");
					this.OnID_GiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="DateTime NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="DateTime NOT NULL")]
		public System.DateTime NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhanTram", DbType="Int NOT NULL")]
		public int SoPhanTram
		{
			get
			{
				return this._SoPhanTram;
			}
			set
			{
				if ((this._SoPhanTram != value))
				{
					this.OnSoPhanTramChanging(value);
					this.SendPropertyChanging();
					this._SoPhanTram = value;
					this.SendPropertyChanged("SoPhanTram");
					this.OnSoPhanTramChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HinhAnh")]
	public partial class HinhAnh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DuongDanHinh;
		
		private int _ID_SanPham;
		
		private int _TrangThai;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDuongDanHinhChanging(string value);
    partial void OnDuongDanHinhChanged();
    partial void OnID_SanPhamChanging(int value);
    partial void OnID_SanPhamChanged();
    partial void OnTrangThaiChanging(int value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public HinhAnh()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuongDanHinh", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DuongDanHinh
		{
			get
			{
				return this._DuongDanHinh;
			}
			set
			{
				if ((this._DuongDanHinh != value))
				{
					this.OnDuongDanHinhChanging(value);
					this.SendPropertyChanging();
					this._DuongDanHinh = value;
					this.SendPropertyChanged("DuongDanHinh");
					this.OnDuongDanHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int NOT NULL")]
		public int TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_HinhAnh", Storage="_SanPham", ThisKey="ID_SanPham", OtherKey="ID_SanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.HinhAnhs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.HinhAnhs.Add(this);
						this._ID_SanPham = value.ID_SanPham;
					}
					else
					{
						this._ID_SanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonBanHang")]
	public partial class HoaDonBanHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_HoaDonBanHang;
		
		private System.DateTime _NgayMuaHang;
		
		private int _TrangThai;
		
		private System.Nullable<int> _ID_NhanVien;
		
		private int _ID_KhachHang;
		
		private EntitySet<ChiTietHoaDonBanHang> _ChiTietHoaDonBanHangs;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HoaDonBanHangChanging(int value);
    partial void OnID_HoaDonBanHangChanged();
    partial void OnNgayMuaHangChanging(System.DateTime value);
    partial void OnNgayMuaHangChanged();
    partial void OnTrangThaiChanging(int value);
    partial void OnTrangThaiChanged();
    partial void OnID_NhanVienChanging(System.Nullable<int> value);
    partial void OnID_NhanVienChanged();
    partial void OnID_KhachHangChanging(int value);
    partial void OnID_KhachHangChanged();
    #endregion
		
		public HoaDonBanHang()
		{
			this._ChiTietHoaDonBanHangs = new EntitySet<ChiTietHoaDonBanHang>(new Action<ChiTietHoaDonBanHang>(this.attach_ChiTietHoaDonBanHangs), new Action<ChiTietHoaDonBanHang>(this.detach_ChiTietHoaDonBanHangs));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HoaDonBanHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_HoaDonBanHang
		{
			get
			{
				return this._ID_HoaDonBanHang;
			}
			set
			{
				if ((this._ID_HoaDonBanHang != value))
				{
					this.OnID_HoaDonBanHangChanging(value);
					this.SendPropertyChanging();
					this._ID_HoaDonBanHang = value;
					this.SendPropertyChanged("ID_HoaDonBanHang");
					this.OnID_HoaDonBanHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayMuaHang", DbType="DateTime NOT NULL")]
		public System.DateTime NgayMuaHang
		{
			get
			{
				return this._NgayMuaHang;
			}
			set
			{
				if ((this._NgayMuaHang != value))
				{
					this.OnNgayMuaHangChanging(value);
					this.SendPropertyChanging();
					this._NgayMuaHang = value;
					this.SendPropertyChanged("NgayMuaHang");
					this.OnNgayMuaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int NOT NULL")]
		public int TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NhanVien", DbType="Int")]
		public System.Nullable<int> ID_NhanVien
		{
			get
			{
				return this._ID_NhanVien;
			}
			set
			{
				if ((this._ID_NhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NhanVienChanging(value);
					this.SendPropertyChanging();
					this._ID_NhanVien = value;
					this.SendPropertyChanged("ID_NhanVien");
					this.OnID_NhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KhachHang", DbType="Int NOT NULL")]
		public int ID_KhachHang
		{
			get
			{
				return this._ID_KhachHang;
			}
			set
			{
				if ((this._ID_KhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KhachHangChanging(value);
					this.SendPropertyChanging();
					this._ID_KhachHang = value;
					this.SendPropertyChanged("ID_KhachHang");
					this.OnID_KhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBanHang_ChiTietHoaDonBanHang", Storage="_ChiTietHoaDonBanHangs", ThisKey="ID_HoaDonBanHang", OtherKey="ID_HoaDonBanHang")]
		public EntitySet<ChiTietHoaDonBanHang> ChiTietHoaDonBanHangs
		{
			get
			{
				return this._ChiTietHoaDonBanHangs;
			}
			set
			{
				this._ChiTietHoaDonBanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDonBanHang", Storage="_KhachHang", ThisKey="ID_KhachHang", OtherKey="ID_KhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDonBanHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDonBanHangs.Add(this);
						this._ID_KhachHang = value.ID_KhachHang;
					}
					else
					{
						this._ID_KhachHang = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonBanHang", Storage="_NhanVien", ThisKey="ID_NhanVien", OtherKey="ID_NhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonBanHangs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonBanHangs.Add(this);
						this._ID_NhanVien = value.ID_NhanVien;
					}
					else
					{
						this._ID_NhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonBanHangs(ChiTietHoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBanHang = this;
		}
		
		private void detach_ChiTietHoaDonBanHangs(ChiTietHoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBanHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonNhapHang")]
	public partial class HoaDonNhapHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_HoaDonNhapHang;
		
		private System.DateTime _NgayNhapHang;
		
		private int _TrangThai;
		
		private System.Nullable<int> _ID_NhanVien;
		
		private int _ID_NhaCungCap;
		
		private EntitySet<ChiTietHoaDonNhapHang> _ChiTietHoaDonNhapHangs;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HoaDonNhapHangChanging(int value);
    partial void OnID_HoaDonNhapHangChanged();
    partial void OnNgayNhapHangChanging(System.DateTime value);
    partial void OnNgayNhapHangChanged();
    partial void OnTrangThaiChanging(int value);
    partial void OnTrangThaiChanged();
    partial void OnID_NhanVienChanging(System.Nullable<int> value);
    partial void OnID_NhanVienChanged();
    partial void OnID_NhaCungCapChanging(int value);
    partial void OnID_NhaCungCapChanged();
    #endregion
		
		public HoaDonNhapHang()
		{
			this._ChiTietHoaDonNhapHangs = new EntitySet<ChiTietHoaDonNhapHang>(new Action<ChiTietHoaDonNhapHang>(this.attach_ChiTietHoaDonNhapHangs), new Action<ChiTietHoaDonNhapHang>(this.detach_ChiTietHoaDonNhapHangs));
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HoaDonNhapHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_HoaDonNhapHang
		{
			get
			{
				return this._ID_HoaDonNhapHang;
			}
			set
			{
				if ((this._ID_HoaDonNhapHang != value))
				{
					this.OnID_HoaDonNhapHangChanging(value);
					this.SendPropertyChanging();
					this._ID_HoaDonNhapHang = value;
					this.SendPropertyChanged("ID_HoaDonNhapHang");
					this.OnID_HoaDonNhapHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhapHang", DbType="DateTime NOT NULL")]
		public System.DateTime NgayNhapHang
		{
			get
			{
				return this._NgayNhapHang;
			}
			set
			{
				if ((this._NgayNhapHang != value))
				{
					this.OnNgayNhapHangChanging(value);
					this.SendPropertyChanging();
					this._NgayNhapHang = value;
					this.SendPropertyChanged("NgayNhapHang");
					this.OnNgayNhapHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int NOT NULL")]
		public int TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NhanVien", DbType="Int")]
		public System.Nullable<int> ID_NhanVien
		{
			get
			{
				return this._ID_NhanVien;
			}
			set
			{
				if ((this._ID_NhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NhanVienChanging(value);
					this.SendPropertyChanging();
					this._ID_NhanVien = value;
					this.SendPropertyChanged("ID_NhanVien");
					this.OnID_NhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NhaCungCap", DbType="Int NOT NULL")]
		public int ID_NhaCungCap
		{
			get
			{
				return this._ID_NhaCungCap;
			}
			set
			{
				if ((this._ID_NhaCungCap != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._ID_NhaCungCap = value;
					this.SendPropertyChanged("ID_NhaCungCap");
					this.OnID_NhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhapHang_ChiTietHoaDonNhapHang", Storage="_ChiTietHoaDonNhapHangs", ThisKey="ID_HoaDonNhapHang", OtherKey="ID_HoaDonNhapHang")]
		public EntitySet<ChiTietHoaDonNhapHang> ChiTietHoaDonNhapHangs
		{
			get
			{
				return this._ChiTietHoaDonNhapHangs;
			}
			set
			{
				this._ChiTietHoaDonNhapHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_HoaDonNhapHang", Storage="_NhaCungCap", ThisKey="ID_NhaCungCap", OtherKey="ID_NhaCungCap", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.HoaDonNhapHangs.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.HoaDonNhapHangs.Add(this);
						this._ID_NhaCungCap = value.ID_NhaCungCap;
					}
					else
					{
						this._ID_NhaCungCap = default(int);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonNhapHang", Storage="_NhanVien", ThisKey="ID_NhanVien", OtherKey="ID_NhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonNhapHangs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonNhapHangs.Add(this);
						this._ID_NhanVien = value.ID_NhanVien;
					}
					else
					{
						this._ID_NhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonNhapHangs(ChiTietHoaDonNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhapHang = this;
		}
		
		private void detach_ChiTietHoaDonNhapHangs(ChiTietHoaDonNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhapHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_KhachHang;
		
		private string _HoTen_KH;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private string _Email;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private EntitySet<ChiTietBinhLuan> _ChiTietBinhLuans;
		
		private EntitySet<DienThoai_KhachHang> _DienThoai_KhachHangs;
		
		private EntitySet<HoaDonBanHang> _HoaDonBanHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KhachHangChanging(int value);
    partial void OnID_KhachHangChanged();
    partial void OnHoTen_KHChanging(string value);
    partial void OnHoTen_KHChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public KhachHang()
		{
			this._ChiTietBinhLuans = new EntitySet<ChiTietBinhLuan>(new Action<ChiTietBinhLuan>(this.attach_ChiTietBinhLuans), new Action<ChiTietBinhLuan>(this.detach_ChiTietBinhLuans));
			this._DienThoai_KhachHangs = new EntitySet<DienThoai_KhachHang>(new Action<DienThoai_KhachHang>(this.attach_DienThoai_KhachHangs), new Action<DienThoai_KhachHang>(this.detach_DienThoai_KhachHangs));
			this._HoaDonBanHangs = new EntitySet<HoaDonBanHang>(new Action<HoaDonBanHang>(this.attach_HoaDonBanHangs), new Action<HoaDonBanHang>(this.detach_HoaDonBanHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KhachHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_KhachHang
		{
			get
			{
				return this._ID_KhachHang;
			}
			set
			{
				if ((this._ID_KhachHang != value))
				{
					this.OnID_KhachHangChanging(value);
					this.SendPropertyChanging();
					this._ID_KhachHang = value;
					this.SendPropertyChanged("ID_KhachHang");
					this.OnID_KhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen_KH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen_KH
		{
			get
			{
				return this._HoTen_KH;
			}
			set
			{
				if ((this._HoTen_KH != value))
				{
					this.OnHoTen_KHChanging(value);
					this.SendPropertyChanging();
					this._HoTen_KH = value;
					this.SendPropertyChanged("HoTen_KH");
					this.OnHoTen_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ChiTietBinhLuan", Storage="_ChiTietBinhLuans", ThisKey="ID_KhachHang", OtherKey="ID_KhachHang")]
		public EntitySet<ChiTietBinhLuan> ChiTietBinhLuans
		{
			get
			{
				return this._ChiTietBinhLuans;
			}
			set
			{
				this._ChiTietBinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DienThoai_KhachHang", Storage="_DienThoai_KhachHangs", ThisKey="ID_KhachHang", OtherKey="ID_KhachHang")]
		public EntitySet<DienThoai_KhachHang> DienThoai_KhachHangs
		{
			get
			{
				return this._DienThoai_KhachHangs;
			}
			set
			{
				this._DienThoai_KhachHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDonBanHang", Storage="_HoaDonBanHangs", ThisKey="ID_KhachHang", OtherKey="ID_KhachHang")]
		public EntitySet<HoaDonBanHang> HoaDonBanHangs
		{
			get
			{
				return this._HoaDonBanHangs;
			}
			set
			{
				this._HoaDonBanHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietBinhLuans(ChiTietBinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_ChiTietBinhLuans(ChiTietBinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_DienThoai_KhachHangs(DienThoai_KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DienThoai_KhachHangs(DienThoai_KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiNhanVien")]
	public partial class LoaiNhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_LoaiNhanVien;
		
		private string _TenLoaiNhanVien;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LoaiNhanVienChanging(int value);
    partial void OnID_LoaiNhanVienChanged();
    partial void OnTenLoaiNhanVienChanging(string value);
    partial void OnTenLoaiNhanVienChanged();
    #endregion
		
		public LoaiNhanVien()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LoaiNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_LoaiNhanVien
		{
			get
			{
				return this._ID_LoaiNhanVien;
			}
			set
			{
				if ((this._ID_LoaiNhanVien != value))
				{
					this.OnID_LoaiNhanVienChanging(value);
					this.SendPropertyChanging();
					this._ID_LoaiNhanVien = value;
					this.SendPropertyChanged("ID_LoaiNhanVien");
					this.OnID_LoaiNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiNhanVien", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenLoaiNhanVien
		{
			get
			{
				return this._TenLoaiNhanVien;
			}
			set
			{
				if ((this._TenLoaiNhanVien != value))
				{
					this.OnTenLoaiNhanVienChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiNhanVien = value;
					this.SendPropertyChanged("TenLoaiNhanVien");
					this.OnTenLoaiNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiNhanVien_NhanVien", Storage="_NhanViens", ThisKey="ID_LoaiNhanVien", OtherKey="ID_LoaiNhanVien")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.LoaiNhanVien = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.LoaiNhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSanPham")]
	public partial class LoaiSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_LoaiSanPham;
		
		private string _TenLoaiSanPham;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LoaiSanPhamChanging(int value);
    partial void OnID_LoaiSanPhamChanged();
    partial void OnTenLoaiSanPhamChanging(string value);
    partial void OnTenLoaiSanPhamChanged();
    #endregion
		
		public LoaiSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LoaiSanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_LoaiSanPham
		{
			get
			{
				return this._ID_LoaiSanPham;
			}
			set
			{
				if ((this._ID_LoaiSanPham != value))
				{
					this.OnID_LoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_LoaiSanPham = value;
					this.SendPropertyChanged("ID_LoaiSanPham");
					this.OnID_LoaiSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSanPham", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoaiSanPham
		{
			get
			{
				return this._TenLoaiSanPham;
			}
			set
			{
				if ((this._TenLoaiSanPham != value))
				{
					this.OnTenLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSanPham = value;
					this.SendPropertyChanged("TenLoaiSanPham");
					this.OnTenLoaiSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_SanPhams", ThisKey="ID_LoaiSanPham", OtherKey="ID_LoaiSanPham")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NhaCungCap;
		
		private string _TenNhaCungCap;
		
		private string _DiaChi;
		
		private EntitySet<DienThoai_NhaCungCap> _DienThoai_NhaCungCaps;
		
		private EntitySet<HoaDonNhapHang> _HoaDonNhapHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NhaCungCapChanging(int value);
    partial void OnID_NhaCungCapChanged();
    partial void OnTenNhaCungCapChanging(string value);
    partial void OnTenNhaCungCapChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._DienThoai_NhaCungCaps = new EntitySet<DienThoai_NhaCungCap>(new Action<DienThoai_NhaCungCap>(this.attach_DienThoai_NhaCungCaps), new Action<DienThoai_NhaCungCap>(this.detach_DienThoai_NhaCungCaps));
			this._HoaDonNhapHangs = new EntitySet<HoaDonNhapHang>(new Action<HoaDonNhapHang>(this.attach_HoaDonNhapHangs), new Action<HoaDonNhapHang>(this.detach_HoaDonNhapHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NhaCungCap", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NhaCungCap
		{
			get
			{
				return this._ID_NhaCungCap;
			}
			set
			{
				if ((this._ID_NhaCungCap != value))
				{
					this.OnID_NhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._ID_NhaCungCap = value;
					this.SendPropertyChanged("ID_NhaCungCap");
					this.OnID_NhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhaCungCap", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenNhaCungCap
		{
			get
			{
				return this._TenNhaCungCap;
			}
			set
			{
				if ((this._TenNhaCungCap != value))
				{
					this.OnTenNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._TenNhaCungCap = value;
					this.SendPropertyChanged("TenNhaCungCap");
					this.OnTenNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_DienThoai_NhaCungCap", Storage="_DienThoai_NhaCungCaps", ThisKey="ID_NhaCungCap", OtherKey="ID_NhaCungCap")]
		public EntitySet<DienThoai_NhaCungCap> DienThoai_NhaCungCaps
		{
			get
			{
				return this._DienThoai_NhaCungCaps;
			}
			set
			{
				this._DienThoai_NhaCungCaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_HoaDonNhapHang", Storage="_HoaDonNhapHangs", ThisKey="ID_NhaCungCap", OtherKey="ID_NhaCungCap")]
		public EntitySet<HoaDonNhapHang> HoaDonNhapHangs
		{
			get
			{
				return this._HoaDonNhapHangs;
			}
			set
			{
				this._HoaDonNhapHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DienThoai_NhaCungCaps(DienThoai_NhaCungCap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_DienThoai_NhaCungCaps(DienThoai_NhaCungCap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
		
		private void attach_HoaDonNhapHangs(HoaDonNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_HoaDonNhapHangs(HoaDonNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NhanVien;
		
		private string _HoTen_NV;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private string _Email;
		
		private string _HinhAnh;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private int _ID_LoaiNhanVien;
		
		private EntitySet<DienThoai_NhanVien> _DienThoai_NhanViens;
		
		private EntitySet<HoaDonBanHang> _HoaDonBanHangs;
		
		private EntitySet<HoaDonNhapHang> _HoaDonNhapHangs;
		
		private EntityRef<LoaiNhanVien> _LoaiNhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NhanVienChanging(int value);
    partial void OnID_NhanVienChanged();
    partial void OnHoTen_NVChanging(string value);
    partial void OnHoTen_NVChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnID_LoaiNhanVienChanging(int value);
    partial void OnID_LoaiNhanVienChanged();
    #endregion
		
		public NhanVien()
		{
			this._DienThoai_NhanViens = new EntitySet<DienThoai_NhanVien>(new Action<DienThoai_NhanVien>(this.attach_DienThoai_NhanViens), new Action<DienThoai_NhanVien>(this.detach_DienThoai_NhanViens));
			this._HoaDonBanHangs = new EntitySet<HoaDonBanHang>(new Action<HoaDonBanHang>(this.attach_HoaDonBanHangs), new Action<HoaDonBanHang>(this.detach_HoaDonBanHangs));
			this._HoaDonNhapHangs = new EntitySet<HoaDonNhapHang>(new Action<HoaDonNhapHang>(this.attach_HoaDonNhapHangs), new Action<HoaDonNhapHang>(this.detach_HoaDonNhapHangs));
			this._LoaiNhanVien = default(EntityRef<LoaiNhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NhanVien
		{
			get
			{
				return this._ID_NhanVien;
			}
			set
			{
				if ((this._ID_NhanVien != value))
				{
					this.OnID_NhanVienChanging(value);
					this.SendPropertyChanging();
					this._ID_NhanVien = value;
					this.SendPropertyChanged("ID_NhanVien");
					this.OnID_NhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen_NV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen_NV
		{
			get
			{
				return this._HoTen_NV;
			}
			set
			{
				if ((this._HoTen_NV != value))
				{
					this.OnHoTen_NVChanging(value);
					this.SendPropertyChanging();
					this._HoTen_NV = value;
					this.SendPropertyChanged("HoTen_NV");
					this.OnHoTen_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LoaiNhanVien", DbType="Int NOT NULL")]
		public int ID_LoaiNhanVien
		{
			get
			{
				return this._ID_LoaiNhanVien;
			}
			set
			{
				if ((this._ID_LoaiNhanVien != value))
				{
					if (this._LoaiNhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LoaiNhanVienChanging(value);
					this.SendPropertyChanging();
					this._ID_LoaiNhanVien = value;
					this.SendPropertyChanged("ID_LoaiNhanVien");
					this.OnID_LoaiNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DienThoai_NhanVien", Storage="_DienThoai_NhanViens", ThisKey="ID_NhanVien", OtherKey="ID_NhanVien")]
		public EntitySet<DienThoai_NhanVien> DienThoai_NhanViens
		{
			get
			{
				return this._DienThoai_NhanViens;
			}
			set
			{
				this._DienThoai_NhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonBanHang", Storage="_HoaDonBanHangs", ThisKey="ID_NhanVien", OtherKey="ID_NhanVien")]
		public EntitySet<HoaDonBanHang> HoaDonBanHangs
		{
			get
			{
				return this._HoaDonBanHangs;
			}
			set
			{
				this._HoaDonBanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonNhapHang", Storage="_HoaDonNhapHangs", ThisKey="ID_NhanVien", OtherKey="ID_NhanVien")]
		public EntitySet<HoaDonNhapHang> HoaDonNhapHangs
		{
			get
			{
				return this._HoaDonNhapHangs;
			}
			set
			{
				this._HoaDonNhapHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiNhanVien_NhanVien", Storage="_LoaiNhanVien", ThisKey="ID_LoaiNhanVien", OtherKey="ID_LoaiNhanVien", IsForeignKey=true)]
		public LoaiNhanVien LoaiNhanVien
		{
			get
			{
				return this._LoaiNhanVien.Entity;
			}
			set
			{
				LoaiNhanVien previousValue = this._LoaiNhanVien.Entity;
				if (((previousValue != value) 
							|| (this._LoaiNhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiNhanVien.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._LoaiNhanVien.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._ID_LoaiNhanVien = value.ID_LoaiNhanVien;
					}
					else
					{
						this._ID_LoaiNhanVien = default(int);
					}
					this.SendPropertyChanged("LoaiNhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DienThoai_NhanViens(DienThoai_NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_DienThoai_NhanViens(DienThoai_NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDonNhapHangs(HoaDonNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDonNhapHangs(HoaDonNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
}
#pragma warning restore 1591
